#import lib.yasm

#define _a3j0__a2j1 q
#define _a1j0__a0j1 t
#define _a0j0__a2j1 r
#define _a2j0__a0j1 s
#define _a0j0__a1j1 u
#define _a1j0__a2j1 j
#define _a2j0__a1j1 h
#define _a1j0__a3j1 w
#define _a3j0__a0j1 y
#define _a0j0__a3j1 x
#define _a3j0__a1j1 v
#define _a2j0__a3j1 p

#define ca0j2 :x
#define ca1j2 :y
#define ca3j2 _
#define ca2j2 o

## 0123 a
## 1023 b
## 2013 c
## 0213 d
## 1203 e
## 2103 f
## 2130 g
## 1230 h
## 3210 i
## 2310 j
## 1320 k
## 3120 l
## 3021 m
## 0321 n
## 2301 o
## 3201 p
## 0231 q
## 2031 r
## 1032 s
## 0132 t
## 3102 u
## 1302 v
## 0312 w
## 3012 x

#define score a
#define best z
#define const999 :z

#define jobcost(agent, job) {
    :aagentjjob
}

#define totalcost(agent0, agent1, agent2, agent3) {
    jobcost(agent0, 0)+jobcost(agent1, 1)+jobcost(agent2, 2)
}

#define select_string(str_true, str_false, choose) {
    eval_try("0"+str_false+"1"+str_true)-(eval_try(choose+str_true))-0-eval_try("1"+str_true)
}

#define min2(a, b) {
    a+(b-a)*(b<a)
}

#define check_if(str, var) {
    ifvar<score thenscore=var best=strend
}

#define check_div(str, var) {
    score=var/(var<score)
    best=str
}

#define skip_go(next1, next2) {
    gotoeval(@+1)+(next1>score)*(next2>score)
}

## @:
##     a=min2(a, b)
##     z=select_string("1023", "0123", a==b)

@:
    ca0j2=:a0j2;
    ca1j2=:a1j2;
    ca3j2=:a3j2;
    ca2j2=:a2j2;
    _a3j0__a2j1=:a3j0+:a2j1;
    _a0j0__a1j1=:a0j0+:a1j1;
    i=_a3j0__a2j1+ca1j2

@:
    z=123;
    _a1j0__a0j1=:a1j0+:a0j1;
    _a0j0__a2j1=:a0j0+:a2j1;
    _a2j0__a0j1=:a2j0+:a0j1;
    a=_a0j0__a1j1+ca2j2;
    b=_a1j0__a0j1+ca2j2;
    c=_a2j0__a0j1+ca1j2

@:
    _a3j0__a2j1=:a3j0+:a2j1;
    _a1j0__a2j1=:a1j0+:a2j1;
    _a2j0__a1j1=:a2j0+:a1j1;
    _a1j0__a3j1=:a1j0+:a3j1;
    d=_a0j0__a2j1+ca1j2;
    e=_a1j0__a2j1+ca0j2

@:
    _a3j0__a0j1=:a3j0+:a0j1;
    _a0j0__a3j1=:a0j0+:a3j1;
    _a3j0__a1j1=:a3j0+:a1j1;
    _a2j0__a3j1=:a2j0+:a3j1;
    f=_a2j0__a1j1+ca0j2;
    g=_a2j0__a1j1+ca3j2

@:
    h=_a1j0__a2j1+ca3j2;
    j=_a2j0__a3j1+ca1j2;
    k=_a1j0__a3j1+ca2j2;
    l=_a3j0__a1j1+ca2j2;
    m=_a3j0__a0j1+ca2j2;
    n=_a0j0__a3j1+ca2j2;
    o=_a2j0__a3j1+ca0j2;
    p=_a3j0__a2j1+ca0j2;
    check_div(321, n)
    
@:
    q=_a0j0__a2j1+ca3j2;
    check_if(2130, g)
    check_if(1203, e);
    check_div(213, d)

@:
    r=_a2j0__a0j1+ca3j2;
    check_if(1230, h)
    check_if(231, q);
    check_div(2013, c)

@:
    s=_a1j0__a0j1+ca3j2;
    check_if(2310, j)
    check_if(2301, o);
    check_div(2013, c)

@:
    t=_a0j0__a1j1+ca3j2;
    check_if(3120, l)
    check_if(3210, i);
    check_div(1320, k)

@:
    u=_a3j0__a1j1+ca0j2;
    check_if(3021, m);
    check_div(1032, s)

    ##gotoeval(@+1)+(p>score)*(r>score)##*(u>score)

@:
    check_if(3201, p)
    check_if(2031, r);
    check_div(3102, u)

@:
    v=_a1j0__a3j1+ca0j2;
    w=_a0j0__a3j1+ca1j2;
    x=_a3j0__a0j1+ca1j2;
    check_if(1023, b)
    gotoeval(@+1)+(v>score)*(f>score)*(x>score)

@:
    const999=999
    check_if(1302, v)
    check_if(2103, f);
    check_div(3012, x)

@:
    
    check_if(312, w)
    check_if(132, t)
    :o=best>const999+""-1+best;
    goto:done++